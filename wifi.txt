/* terminal1 program
 
 ----------------------------------------------------------------------------- 
 * Pin layout should be as follows:
 * Signal     Pin              Pin               Pin
 *            Arduino Uno      Arduino Mega      MFRC522 board
 * ------------------------------------------------------------
 * Reset      9                5                 RST
 * SPI SS     10               53                SDA
 * SPI MOSI   11               51                MOSI
 * SPI MISO   12               50                MISO
 * SPI SCK    13               52                SCK
 * voltage 3.3v 
 */
 
 
 // gsm module is connected with pin number 7 and pin number 8 of the arduino. 

#include <SPI.h>
#include <MFRC522.h>
#include <LiquidCrystal.h>
#include <SoftwareSerial.h>
#include <Servo.h>
SoftwareSerial SIM900(2, 3); // gsm module connected here
String textForSMS;
SoftwareSerial SUART(0,1 ); //SRX = DPin-2; STX = DPin-3

#define SS_PIN 10
#define RST_PIN 9
MFRC522 mfrc522(SS_PIN, RST_PIN);  
Servo myServo;      // Create MFRC522 instance.
// lcd pins
#define rs A0
#define en A2 
#define d4 6 
#define d5 5  
#define d6 4 
#define d7 3 
// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

// parents numbers 

String f1001 = "+919019262751"; // student1 father cell phone number
String f1002 = "+917499992310"; 
String f1003 = "+917499992310"; 

void setup() {
  
  myServo.attach(8);
        Serial.begin(9600); 
         SUART.begin(9600);       // Nodemcu is connected over here
        randomSeed(analogRead(0));
        SIM900.begin(9600); // original 19200. while enter 9600 for sim900A
        SPI.begin();                // Init SPI bus
        mfrc522.PCD_Init();        // Init MFRC522 card
        //Serial.println("Scan a MIFARE Classic PICC to demonstrate Value Blocks.");
        
          // set up the LCD's number of columns and rows: 
  lcd.begin(16, 2);
  // Print a message to the LCD.
  lcd.print("AttendanceSystem");
  delay(3000); 
  lcd.clear(); 
  lcd.print("Swip Your Card"); 
  delay(1000); 
  
  
}

void loop() {
        
  
        // Prepare key - all keys are set to FFFFFFFFFFFFh at chip delivery from the factory.
        MFRC522::MIFARE_Key key;
        for (byte i = 0; i < 6; i++) {
                key.keyByte[i] = 0xFF;
        }
        // Look for new cards
        if ( ! mfrc522.PICC_IsNewCardPresent()) {
                return;
        }

        // Select one of the cards
        if ( ! mfrc522.PICC_ReadCardSerial()) {
                return;
        }
        // Now a card is selected. The UID and SAK is in mfrc522.uid.
        
        // Dump UID
        Serial.print("Card UID: ");
        for (byte i = 0; i < mfrc522.uid.size; i++) {
             //   Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
             //   Serial.print(mfrc522.uid.uidByte[i], DEC);
        } 
        Serial.println();

        // Dump PICC type
        byte piccType = mfrc522.PICC_GetType(mfrc522.uid.sak);
    //    Serial.print("PICC type: ");
//Serial.println(mfrc522.PICC_GetTypeName(piccType));
        if (        piccType != MFRC522::PICC_TYPE_MIFARE_MINI 
                &&        piccType != MFRC522::PICC_TYPE_MIFARE_1K
                &&        piccType != MFRC522::PICC_TYPE_MIFARE_4K) {
                //Serial.println("This sample only works with MIFARE Classic cards.");
                return;
        }
        // defining Cards here 
 
                // student1
        if( (mfrc522.uid.uidByte[0] == 03) && (mfrc522.uid.uidByte[1] == 137) && (mfrc522.uid.uidByte[2] == 94) && (mfrc522.uid.uidByte[3] == 47) ) // student1 card
        {
          lcd.clear();
          lcd.print("AttendanceMarked");
          delay(500); 
Serial.println("student 1");
    char myMsg[] = "student 1";
     Serial.println(myMsg); 
     SUART.println(myMsg); // Wait for 1 second
  myServo.write(180); // Move the servo to 90 degrees
        
         // for gsm   
          sendsms(" shravan is Present", f1001);
          delay(1000);   
        
         lcd.setCursor(0, 1);
         lcd.print("message sent"); 
         delay(2000); 
         
         lcd.clear(); 
          lcd.print("Swip Your Card");
          delay(1000); 
        }
        
                        // student2
        if( (mfrc522.uid.uidByte[0] == 83) && (mfrc522.uid.uidByte[1] == 23) && (mfrc522.uid.uidByte[2] == 180) && (mfrc522.uid.uidByte[3] == 80) ) // student2 card
        {
         lcd.clear();
          lcd.print("AttendanceMarked");
          delay(500); 
  Serial.println("student 2");
  char myMsg[] = "student 2";
     Serial.println(myMsg); 
     SUART.println(myMsg); // Wait for 1 second
  myServo.write(180); 
        
         // for gsm   
          sendsms("sumanthis Present", f1002);
          delay(1000);   
        
         lcd.setCursor(0, 1);
         lcd.print("message sent"); 
         delay(2000); 
         
         lcd.clear(); 
          lcd.print("Swip Your Card");
          delay(1000); 
        }
       

        else 
        Serial.println("unregistered user");

       
}


void sendsms(String message, String number)
{
String mnumber = "AT + CMGS = \""+number+"\""; 
   SIM900.print("AT+CMGF=1\r");                   
  delay(1000);
 SIM900.println(mnumber);  // recipient's mobile number, in international format
 
  delay(1000);
  SIM900.println(message);                         // message to send
  delay(1000);
  SIM900.println((char)26);                        // End AT command with a ^Z, ASCII code 26
  delay(1000); 
  SIM900.println();
  delay(100);                                     // give module time to send SMS
 // SIM900power();  
}